Powershell Find Mods Containing Strings:
Get-ChildItem "D:\SteamLibrary\steamapps\common\Total War WARHAMMER III\data" -filter *.pack -Recurse | Select-String "search_text" | Select-Object -Unique Path

Get-ChildItem "D:\SteamLibrary\steamapps\workshop\content\1142710" -filter *.pack -Recurse | Select-String "search_text" | Select-Object -Unique Path

New-Item -ItemType Junction -Path "" -Target ""
New-Item -ItemType Junction -Path "WARHAMMER III Data Folder" -Target "D:\SteamLibrary\steamapps\common\Total War WARHAMMER III\data"
New-Item -ItemType Junction -Path "WARHAMMER III Workshop Folder" -Target "D:\SteamLibrary\steamapps\workshop\content\1142710"
New-Item -ItemType Junction -Path "WARHAMMER III Scripting Projects" -Target "D:\OneDrive\Documents\Warhammer III Projects\Scripting_Projects"

New-Item -ItemType Junction -Path "WARHAMMER III Google Drive" -Target "E:\Archive\Online Sync\Drive\Google Drive Public\WH3 Google Drive"
New-Item -ItemType Junction -Path "WARHAMMER III Dropbox" -Target "E:\Archive\Online Sync\Dropbox\Dropbox Public\WH3 Dropbox"
New-Item -ItemType Junction -Path "Total War WARHAMMER III" -Target "D:\SteamLibrary\steamapps\common\Total War WARHAMMER III"
SCRIPT ERROR
ERROR - SCRIPT HAS FAILED

       --prevent phoenix gate growth for first owner.
        cm:apply_effect_bundle_to_region("wh2_dlc10_dark_elf_fortress_gate", "wh3_main_combi_region_phoenix_gate", 0);

Overwrite priority order ! # $ % & ‘ ( ) + , – ; = @ 0-9 a-z [ ] ^ _ ` { } ~ Where “!” wins over “a”.

https://discord.com/channels/373745291289034763/1021079382422474812



Alshua:	It's something you could have done as part of your older Specialist mod right?  Looked through your workshop just now.  Maybe I need to teach you how to do that...

Lycia Pintella: yeah I don't know how to do that without it crashing if someone doesn't have the mod
Alshua: In this case you're attaching it to a skill.  What you would do is, take your current mod.  Then, go to character_skills in my mod, and copy my entry for the skill.  Put that entry into your mod to prevent crashes.  However, the important part is, name the character_skills table in your mod "zzzzz_lycia_harbinger_scouting", or whatever... just making mega sure yours is lower priority than mine
	
If your character_skills entry is missing something that mine has, like an image link or something, change it to something innocent and unrelated
	
Technically your entry could be blank but you might as well have it match mine a bit just in case some idiot puts it higher in the load order, it won't break as badly

Lycia Pintella:	I'll have to copy this to a google doc for later I'm too tired to do it haha


Alshua:	This way, if you install your Specialist mod WITHOUT Ellyrion, this skill entry will just be floating harmlessly in the void Attached to nothing. But if you install with WITH Ellyrion, it will work normally. You can use this principle for a lot of compatibility issues, but if you find yourself having to add too many entries, you should consider submodding the way you normally do; there are still good reasons people do that
	
But if the trail of breadcrumbs is very short like this, it can be done. The tricky part is that it may break in the future if the parent modder changes their naming system, I try not to do that but not everyone will be as careful. However such a break should generally simply cause the mod not to work, it shouldn't normally cause crashes. I am teaching you something slightly dangerous at your level because if you start copying people's code into your own mods, there's some risk, if you are not an expert, of you altering how the parent mod behaves

But as you start to understand the logic it can be used quite powerfully... I often include compatibility that most modders would need to make a submod for. For instance the Cult Oracle can be recruited by Mixu's Egrimm Van Horstmann and is fully supported by his skill tree, right out of the box


--adding dummy stuff to the tech mod so it can apply techs to custom heroes and lords.
land_units_tables|main_units_tables|melee_weapons_tables|ui_unit_groupings_tables|unit_description_historical_texts_tables|unit_description_short_texts_tables|unit_attributes_groups|mounts|variants_tables|battle_entities|agent_culture_details|battlefiel_engines|warscape_animated_tables|missile_weapon|projectiles|agent_subtypes_tables



REGEX TESTER
https://regex101.com/r/cO8lqs/3
https://regex101.com/r/fo3Fuk/1

^(?!.*).*

(^land_|^main_)units_tables$

^wh2_dlc15(?!.*_cha_)(?!.*_boss)(?!.*_summoned).*

Try this search on the above link:
^(?:.*_mon_)(?!.*region_to_forces_ally_provincewide).*
^.*mon(?!ed)(?!_prince)(?!.*dragon).* -- no dragons, dragon princes, or summoned units.

^wh_dlc03_bst(?!.*_cha_).*
	d(?!r)       matches a d only if is not followed by r, but r will not be part of the overall regex match -> Try it!

^wh2_dlc14|wh2_dlc13|wh2_dlc12|wh2_dlc11|wh2_dlc10|wh2_dlc09(?!.*_cha_)(?!.*_boss)(?!.*summoned).*

^(wh2_dlc14|wh2_dlc13|wh2_dlc12|wh2_dlc11|wh2_dlc10|wh2_dlc09)(?!.*_cha_)(?!.*_boss)(?!.*summoned)(?!.*noctilus).*

^.*(?!.*_cha_)(_cav_|_mon_|_inf_).*
^.*(mon)(?!.*_cha_).*
^(?!.*_cha_).*

^.*mon(?!ed).* -- find all monsters but no summoned.
^.*mon(?!ed)(?!_prince).* -- turns out the daemon prince has mon in it, so rule him out too.
^(?!.*_cha_).*

^[!](?!.*[!])

^(?!.*region_to_forces_ally_provincewide)(?!.*force_building_to_force_in_sphere_of_influence_own)(?!.*faction_to_faction_own)(?!.*force_to_force_own)(?!.*factionwide)(?!.*hidden)(?!.*character).*

Powershell
New-Item -ItemType SymbolicLink -Path ".\data" -Target "D:\SteamLibrary\steamapps\common\Total War WARHAMMER III\Warhammer III Data Folder"
New-Item -ItemType SymbolicLink -Path ".\data" -Target "E:\Archive\Local Backups\Total War WARHAMMER III\Warhammer III Data Folder"


Git

A place for me to work on my Warhammer III LUA mods with the CA code base included.

echo "# Warhammer_III_Script_Projects_And_Code_Library" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/LyciaPintella/Warhammer_III_Script_Projects_And_Code_Library.git
git push -u origin main