if cm:model():difficulty_level() == -3 and cm:chapter_mission_exists_with_number(next_chapter_number) then
	cm:disable_saving_game(true);
end;

from script/_lib/lib_generated_battle.lua

--- @function get_handicap
--- @desc Returns the battle difficulty. See the documentation for @battle_army:army_handicap for possible return values.
--- @r @number army handicap
function generated_army:get_handicap()
	return self:get_army():army_handicap();
end;


from script/_lib/lib_campaign_manager.lua

--- @function get_difficulty
--- @desc Returns the current combined campaign difficulty. This is returned as an integer value by default, or a string if a single <code>true</code> argument is passed in.
--- @desc <table class="simple"><tr><td><strong>string</strong></td><td><strong>number</strong></td></tr><tr><td>easy</td><td>1</td></tr><tr><td>normal</td><td>2</td></tr><tr><td>hard</td><td>3</td></tr><tr><td>very hard</td><td>4</td></tr><tr><td>legendary</td><td>5</td></tr></table>
--- @desc Note that the numbers returned above are different from those returned by the <code>combined_difficulty_level()</code> function on the campaign model.
--- @p [opt=false] boolean return as string
--- @r object difficulty integer or string
function campaign_manager:get_difficulty(return_as_string)
	local difficulty = self:model():combined_difficulty_level();
	
	if self:get_local_faction_name(true) then
		if difficulty == 0 then
			difficulty = 2;				-- normal
		elseif difficulty == -1 then
			difficulty = 3;				-- hard
		elseif difficulty == -2 then
			difficulty = 4;				-- very hard
		elseif difficulty == -3 then
			difficulty = 5;				-- legendary
		else
			difficulty = 1;				-- easy
		end;

	if return_as_string then
		local difficulty_string = "easy";
		
		if difficulty == 2 then
			difficulty_string = "normal";
		elseif difficulty == 3 then
			difficulty_string = "hard";
		elseif difficulty == 4 then
			difficulty_string = "very hard";
		elseif difficulty == 5 then
			difficulty_string = "legendary";
		end;
		
		return difficulty_string;
	end;
	
	return difficulty;
end;
